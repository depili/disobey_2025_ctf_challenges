*100
FLAG,	420
	444
	514
	474
	410
	424
	544
	554
	720
	640
	624
	200
	700
	620
	700
	264
	340
	200
	660
	644
	730
	624
	714
	204
	564
	0
KEY,	-1530	/ k
	-1510	/ i
	-1630	/ s
	-1630	/ s
	-1410	/ a
	-0620	/ 2

*200
START,	TLS
	JMS	TYPX
	MESG1
	JMS	KREAD
	INAREA
	-20

PW,	CLA CLL
	TAD	TKM6
	DCA	KEYL
	TAD	(INAREA-1)
	DCA	10
	TAD	(KEY-1)
	DCA	11

KEY1,	CLA CLL
	TAD I	10
	AND	TK177
	SNA
	JMP	WRONG
	RTL
	RAL
	TAD I	11
	SZA
	JMP	WRONG	/ Wrong PW
	ISZ	KEYL
	JMP	KEY1
	JMP	DONE

WRONG,	JMS	TYPX
	MESG4
	HLT
	JMP	START


DONE,	JMS	TYPX
	MESG3
	CLA CLL
	TAD	(FLAG-1)
	DCA	10
FL,	CLA CLL
	TAD I	10
	SNA
	JMP	END
	RTR
	JMS	TLSX
	JMP	FL
END,	HLT
	JMP	START

MESG1,	TEXT /PASSWORD:/
MESG3,	TEXT /OK/
MESG4,	TEXT /FAIL/
TKM6,	-6
KEYL,	-6
INAREA, 0


/ BASIC TELETYPE I/O SUBROUTINES
/ REVISION: 18-JAN-71

/ COPYRIGHT 1971	DIGITAL EQUIPMENT CORPORATION
/			MAYNARD, MASSACHUSETTS 01754

/ Written and formatted from scanned manual by
/ Vesa-Pekka Palmu, 2025

/ These subroutines illustrate typical methods of using the
/ standard teletype to input and output alphanumeric data
/ on a pdp-8 family computer.

/          --NOTES--
/ (1) the user program must initialize the teleprinter flag
/ before calling these subroutines.
/
/ (2) these routines may only be called from the field in
/  which they reside.

/ Origin to new page

*.-1 177+1		/ ((Current address -1) OR 177) + 1
*400

/ Subroutine to type messages.
/ this subroutine prints a message to be stored in stripped
/ six bit ascii, two characters per word. this format
/ can be easily generated by using the "TEXT" pseudo-op in
/ programs assembled by PALD, PAL8, or MACRO-8.

/ Entry,	JMS TYPX
/		POINTER		(Address of message)
/ Exit is to entry+2 with the AC clear.

/          --NOTE--
/ The following characters have special meanings:
/
/ Value	character	comments
/ 00	0		marks end of message, the Text
/			pseudo-op inserts this character.
/ 37	\r		causes a carriage return/line feed
/			to be output.

TYPX,	0
	CLA CLL
	TAD I	TYPX	/ Get pointer
	DCA	TYPNT	/ And save it locally
	ISZ	TYPX	/ Return address
TYPX1,	TAD I	TYPNT	/ Get left hand character
	RTR		/ This can be changed to a byte swap on the pdp-8e!
	RTR
	RTR
	JMS	TYPY	/ Convert and type
	TAD I	TYPNT	/ Get right hand character
	ISZ	TYPNT	/ move pointer to next word
	JMS	TYPY	/ Convert and type
	JMP	TYPX1
TYPNT,	0		/ Pointer to string

/ This subroutine is called by "typx" (and "krbx"!)--
/ Enter with the character to type in AC6-11:
/	(1) tests for terminator (00)
/	(2) tests for CR-LF (37) character
/	(3) converts character to 8-bit ascii and types it
TYPY,	0
	AND	TK77	/ Mask off character
	SNA		/ Test for terminator
	JMP I	TYPX	/ Exit if terminator
	TAD	TKM37
	SZA		/ Test for CR-LF
	JMP	TYPY1	/ Not a 37
	TAD	TK215	/ Type a -CR-
	JMS	TLSX
	TAD	TKM125	/ Converts to a -LF- 212

TYPY1,	SPA		/ Test range
	TAD	TK100	/ Range is 301-336
	TAD	TK237	/ Range is 240-277
	JMS	TLSX	/ Type character
	JMP I	TYPY

TK77,	77		/ Mask for AC6-11
TKM37,	-37		/ Test for CR-LF character
TK215,	215		/ ASCII value of -CR-
TKM125,	-125		/ This plus 337 = 212 -LF-
TK100,	100		/ Convert to range 301-336
TK237,	237		/ Covert to range 240-277
TK177,	177

/ Teletype output subroutine.
/ Enter with character in the AC.
/     --NOTE--
/ The teletype flag must be initialized
/ before calling this routine!

TLSX,	0
	AND	TK177
	TSF
	JMP	.-1	/ Wait for teletype ready
	TLS
	CLA
	JMP I	TLSX

/ Teletype input subroutine.
/ Exit with character read in the AC.
KRBX,	0
	KSF
	JMP	.-1	/ Wait for character
	KRB
	JMP I	KRBX

/ Teletype input subroutine.
/ This subroutine demonstrates how to input
/ alphanumeric characters from the teletype. It reads
/ the characters into a buffer, echoes characters typed,
/ and performs minor editing:
/	(1) Characters null (200 and 000) and line feed
/	are deleted on input.
/	(2) Character rubout (377) deletes the previous
/	character typed. It echoes as a backslash followed
/	by the character deleted (multiple rubouts do not
/	echo backslash after the first: a non-rubout char-
/	acter causes a "closing" backslash to be printed).
/ The character carriage return terminates input. It
/ echoes as a carriage return followed by a line feed.

/ Entry,	JMS	KREAD
/		POINTER		(Address of input buffer)
/		-LENGTH		(Minus size of input buffer)
/ Exit is entry+2; on exit:
/	(1) AC is clear.
/	(2) A terminating word of zero is placed in the
/	input buffer (the carriage return is not enterred
/	in the buffer).

/     --NOTE--
/ On buffer overflow, characters will be echoed as "bell"
/ to inform user that buffer is full. All characters,
/ other than carriage return and rubout, are lost.

/ This routine is written to co-reside with the teletype
/ output subroutines "TYPY" and "TLSX".

KREAD,	0
	CLA CLL
	TAD I	KREAD	/ Get address of buffer
	ISZ	KREAD
	DCA	KRPNT	/ Set up pointer
	TAD I	KREAD	/ Get size of buffer
	DCA	KRCNT	/ Set up counter
KRB1,	JMS	KRBX	/ Get character
	DCA I	KRPNT	/ Save character
	TAD	KRTAB	/ Load pointer to table
	DCA	KRBKS	/ Into temp. storate

/ Enter scanning loop.
KRB3,	TAD I	KRPNT	/ Add in current character
	ISZ	KRBKS	/ Advance index to jmp word
	SNA CLA
	JMP I	KRBKS	/ Call special routine
	ISZ	KRBKS	/ Go on next entry
	TAD I	KRBKS	/ Get table entry
	SZA		/ Zero marks end of table
	JMP	KRB3	/ Continue scan

/ Normal character routine--
/ Check for buffer overflow, echo character, and
/ return to fetch next character.
	JMS	KRBKS	/ Echo backslash if needed
	ISZ	KRCNT	/ Test for buffer overflow
	JMP	KRB6	/ Normal route
/ Buffer overflow!
	TAD	TK207	/ Echo "BELL"
KRB5,	JMS	TLSX
	CLA CMA		/ Decrement char counter
	TAD	KRCNT
	JMP	KRB1-1	/ Return to get next char
KRB6,	TAD I	KRPNT	/ Get character
	ISZ	KRPNT	/ Advance buffer pointer
	JMS	TLSX	/ Echo character
	JMP	KRB1	/ Return to get next char

/ Rubout routine--
/ This routine is called when a rubout is typed: It deletes
/ the last character in the vuffer, reset the pointer,
/ and does some fancy echoing.
KRUB,	CLA CMA		/ Reverse rubout flag test
	JMS	KRBKS	/ Echo backslash if needed
	ISZ	KRFLAG	/ Set rubout flag
	TAD I	KREAD	/ Check for empty buffer
	CIA
	TAD	KRCNT	/ By comparing counters
	SNA CLA
	JMP	KRUB1	/ No rubout pas beginning
	CLA CMA
	TAD	KRPNT	/ Decrement buffer pointer
	DCA	KRPNT
	TAD I	KRPNT	/ Get character to echo
	JMP	KRB5

/ Echo CR-LF-backslash on attempt to rubout past the start
/ of the input buffer.
KRUB1,	TAD	TK237	/ Looks like a "<-"!
	JMS	TYPY	/ Forces a CR-LF
	JMS	KRBKS	/ Always forces a backslash
	JMP	KRB1

/ Carriage return routine--
/ This routine is called when a carriage return is typed;
/ Echoes CR-LR, deposits 0 in input buffer, and exits.
KRCR,	JMS	KRBKS	/ Echo backslash if needed.
	TAD	TK237	/ Looks like a "<-"!
	JMS	TYPY	/ Forces a CR-LF
	DCA I	KRPNT	/ Store zero in buffer
	ISZ	KREAD	/ Set to exit address
	JMP I	KREAD	/ And exit.

/ This subroutine echoes backslash when KRFLAG is non-zero
/ Note-- Location "KRBKS" is also used as temporary

KRBKS,	0
	TAD	KRFLAG	/ Get flag
	SZA CLA
	TAD	TK334	/ Backslash character
	SZA
	JMS	TLSX	/ Type a backslash
	DCA	KRFLAG	/ Clear flag
	JMP I	KRBKS	/ Exit

KRFLAG,	0		/ Set to +1 if a rubout was
			/ last char, otherwise 0.

/ Save a couple locations by using TYPX and TYPNT.
KRPNT=TYPNT		/ Pointer to input buffer
KRCNT=TYPX		/ Minus no. of words left
TK207,	207		/ Bell is ascii 207
TK334,	334		/ Backslash is ascii 334

/ Special character table--
/ Entries in thsi table are two wores long:
/	(Word 1)	-Value of character
/	(Word 2)	JMP to proper routine
/ The table is terminated by an entry of 0.
KRTAB,	.
	JMP	KRB1	/ Null -- ignore
	-200
	JMP	KRB1	/ Null -- ignore
	-212
	JMP	KRB1	/ Line feed -- ignore
	-215
	JMP	KRCR	/ Carriage return -- exit
	-377
	JMP	KRUB	/ Rubout -- delete character
	0		/ Denotes end of table.
$